#pragma checksum "C:\Users\jhovelnu\Desktop\Prueba\WebApplication_MasGlobal\WebApplication_MasGlobal\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "97d14c33fcb80c52adacf6eb29e1e8917b16320c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\jhovelnu\Desktop\Prueba\WebApplication_MasGlobal\WebApplication_MasGlobal\Views\_ViewImports.cshtml"
using WebApplication_MasGlobal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\jhovelnu\Desktop\Prueba\WebApplication_MasGlobal\WebApplication_MasGlobal\Views\_ViewImports.cshtml"
using WebApplication_MasGlobal.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"97d14c33fcb80c52adacf6eb29e1e8917b16320c", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1fb21f177a0c148ff1364894af7113210cdd950d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\jhovelnu\Desktop\Prueba\WebApplication_MasGlobal\WebApplication_MasGlobal\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral(@"
<div style=""margin: 10px;"">

    <div class=""input-group mb-3"">
        <div class=""input-group"">
            <input type=""text"" id=""employeeId"" class=""form-control"" placeholder=""Id_Employee"" style=""float: right;"" />
            <span class=""input-group-btn"">
                <button class=""btn btn-outline-secondary"" type=""button"" onclick=""getData()"">Get_Employees</button>
            </span>
        </div>
    </div>

    <span id=""error""></span>
    <br /><br />
    <table class=""table"" id=""data"">
        <thead>
            <tr>
                <th scope=""col"">Id</th>
                <th scope=""col"">Name</th>
                <th scope=""col"">CalculatedSalary</th>
                <th scope=""col"">ContractType</th>
            </tr>
        </thead>
        <tbody>
            <tr></tr>
        </tbody>
    </table>
</div>

<script type=""text/javascript"">
    function getData() {
        console.log(""starting..."");
        var id = $(""#employeeId"").val();

        if (id !== '");
            WriteLiteral(@"') {
            if (isNaN(id)) { alert(""The id is not a number""); return; }
        }

        var url = ""api/employees"";
        var success = getAllCallback;

        if (id !== '') {
            url += ""/"" + id;
            success = getByIdCallback;
        }

        $(""#error"").html("""");
        $(""#data"").find(""tr:gt(1)"").remove();
        $.ajax({
            url: url,
            success: success,
            error: function (error) {
                $(""#error"").html(""An error has occurred, try again"");
                console.log(error);
            }
        })
    }

    function addRows(data) {
        $('#data tr:last').after('<tr><td>' + data['id'] + '</td><td>' + data['name'] + '</td><td>' + Intl.NumberFormat(""es-CO"").format(data['calculatedSalary']) + '</td><td>' + data['contractType'] + '</td></tr>');
    }

    function getAllCallback(data) {
        console.log(data);
        for (i in data) { addRows(data[i]); }
    }

    function getByIdCallback(data) {");
            WriteLiteral("\r\n        console.log(data);\r\n        if (data == undefined) { $(\"#error\").html(\"El id no fue encontrado\"); }\r\n        else { addRows(data); }\r\n    }</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
